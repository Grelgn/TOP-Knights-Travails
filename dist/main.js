(()=>{"use strict";class e{constructor(){this.array=[["00","01","02","03","04","05","06","07"],["10","11","12","13","14","15","16","17"],["20","21","22","23","24","25","26","27"],["30","31","32","33","34","35","36","37"],["40","41","42","43","44","45","46","47"],["50","51","52","53","54","55","56","57"],["60","61","62","63","64","65","66","67"],["70","71","72","73","74","75","76","77"]]}}class h{constructor(e,h,t,i,d){this.x=h,this.y=t,this.value=e[h][t],this.depth=i,this.a=null,this.b=null,this.c=null,this.d=null,this.e=null,this.f=null,this.g=null,this.h=null,this.before=d}}class t{constructor(t,i){this.gameBoard=new e,this.knight=new h(this.gameBoard.array,t,i,0),this.root=this.buildTree(this.knight)}levelOrder(e,h=[],t=[],i=[]){if(null!=e&&!(e.depth>6)){for(!1===t.includes(e.value)&&(h.push(e),t.push(e.value),i.push(e.a),i.push(e.b),i.push(e.c),i.push(e.d),i.push(e.e),i.push(e.f),i.push(e.g),i.push(e.h));i.length;){const e=i.shift();this.levelOrder(e,h,t,i)}return h}}buildTree(e){if(e.depth>6)return;const t=this.gameBoard.array,{x:i}=e,{y:d}=e;return 0===d&&(0===i&&(e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),1===i&&(e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),i>=2&&i<=5&&(e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),6===i&&(e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),7===i&&(e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)))),1===d&&(0===i&&(e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),1===i&&(e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),i>=2&&i<=5&&(e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),6===i&&(e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),7===i&&(e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)))),d>=2&&d<=5&&(0===i&&(e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),1===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),i>=2&&i<=5&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),6===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.h=this.buildTree(new h(t,i+1,d+2,e.depth+1,e))),7===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.d=this.buildTree(new h(t,i-1,d+2,e.depth+1,e)))),6===d&&(0===i&&(e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e))),1===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e))),i>=2&&i<=5&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e)),e.g=this.buildTree(new h(t,i+2,d+1,e.depth+1,e))),6===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e))),7===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.c=this.buildTree(new h(t,i-2,d+1,e.depth+1,e)))),7===d&&(0===i&&(e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e))),1===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e))),i>=2&&i<=5&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e)),e.f=this.buildTree(new h(t,i+2,d-1,e.depth+1,e))),6===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)),e.e=this.buildTree(new h(t,i+1,d-2,e.depth+1,e))),7===i&&(e.a=this.buildTree(new h(t,i-1,d-2,e.depth+1,e)),e.b=this.buildTree(new h(t,i-2,d-1,e.depth+1,e)))),e}}function i(e,h,i=[]){const d=new t(e[0],e[1]),s=d.levelOrder(d.root);let l=0;s.forEach((e=>{if(e.x===h[0]&&e.y===h[1]){l=e.depth;for(let h=l;h>-1;h--)i[h]=[e.x,e.y],e=e.before}})),console.log(`=> You've made it in ${l} moves! Here's your path:`),i.forEach((e=>{console.log(e)}))}i([0,0],[1,2]),i([0,0],[3,3]),i([3,3],[0,0]),i([0,0],[7,7]),i([3,3],[4,3])})();